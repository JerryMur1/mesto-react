{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/admin/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport Vector2 from \"../images/Vector2.svg\";\nimport Close from \"../images/Close-icon.svg\";\nimport Main from './main';\nimport Footer from './footer';\nimport Header from './header';\nimport Form from './popupWithForm';\nimport Image from './popupImage';\nimport React from 'react';\nimport api from '../utils/api';\nimport Card from './card';\n\nfunction App() {\n  _s();\n\n  const [userName, setName] = React.useState([]);\n  const [cards, setCards] = React.useState([]);\n  const [userDescription, setDescription] = React.useState([]);\n  const [userAvatar, setAvatar] = React.useState([]);\n  React.useEffect(() => {\n    api.getInitialCards().then(data => {\n      setCards(data.results.map(card => ({\n        id: card._id,\n        likes: card.likes,\n        url: card.link,\n        name: card.name\n      })));\n    });\n  }, []);\n  React.useEffect(() => {\n    api.getUserId().then(res => {\n      setName(res.name);\n      setDescription(res.about);\n      setAvatar(res.avatar);\n    });\n  });\n  const [isEditProfilePopupOpen, editOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, avatarOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, placeOpen] = React.useState(false);\n  const [cardSelected, selectedCard] = React.useState(false);\n\n  function handleCardClick() {\n    selectedCard(true);\n  }\n\n  function handleEditEditClick() {\n    editOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    avatarOpen(true);\n  }\n\n  function handleEditAddClick() {\n    placeOpen(true);\n  }\n\n  function closeAllPopups() {\n    placeOpen(false);\n    avatarOpen(false);\n    editOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        title: 'Добавить карточку',\n        name: 'add',\n        isOpen: isAddPlacePopupOpen ? 'popup_is-opened' : '',\n        onClose: closeAllPopups,\n        button: 'Добавить'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        title: 'Обновить профиль',\n        name: 'avatar',\n        isOpen: isEditAvatarPopupOpen ? 'popup_is-opened' : '',\n        onClose: closeAllPopups,\n        button: \"Сохранить\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        title: 'Редактировать профиль',\n        name: 'edit',\n        isOpen: isEditProfilePopupOpen ? 'popup_is-opened' : '',\n        onClose: closeAllPopups,\n        button: \"Сохранить\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        title: 'Удалить карточку',\n        name: 'delete',\n        button: \"Да\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        userName: userName,\n        onEditProfile: handleEditEditClick,\n        onAddPlace: handleEditAddClick,\n        onEditAvatar: handleEditAvatarClick,\n        userAvatar: userAvatar,\n        userDescription: userDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Image, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"+ydYzjQt33Isvx4c+cu6QfWSp0M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/admin/mesto-react/src/components/App.js"],"names":["Main","Footer","Header","Form","Image","React","api","Card","App","userName","setName","useState","cards","setCards","userDescription","setDescription","userAvatar","setAvatar","useEffect","getInitialCards","then","data","results","map","card","id","_id","likes","url","link","name","getUserId","res","about","avatar","isEditProfilePopupOpen","editOpen","isEditAvatarPopupOpen","avatarOpen","isAddPlacePopupOpen","placeOpen","cardSelected","selectedCard","handleCardClick","handleEditEditClick","handleEditAvatarClick","handleEditAddClick","closeAllPopups"],"mappings":"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","sourcesContent":["\nimport Vector2 from '../images/Vector2.svg'\nimport Close from '../images/Close-icon.svg'\nimport Main from './main'\nimport Footer from './footer';\nimport Header from './header';\nimport Form from './popupWithForm';\nimport Image from './popupImage';\nimport React from 'react'\nimport api from '../utils/api';\nimport Card from './card'\n\nfunction App() {\nconst [userName, setName] = React.useState([])\nconst [cards, setCards] = React.useState([])\nconst [userDescription, setDescription] = React.useState([])\nconst [userAvatar, setAvatar] = React.useState([])\n\nReact.useEffect(()=>{\n  api.getInitialCards()\n  .then((data)=>{\n    setCards(data.results.map((card)=>({\n      id: card._id,\n      likes: card.likes,\n      url: card.link,\n      name: card.name\n    })))\n  })\n}, [])\n\n    React.useEffect(()=>{\n        api.getUserId()\n        .then((res)=>{\n            setName(res.name)\n            setDescription(res.about)\n            setAvatar(res.avatar)\n        })\n    })\n  \n\n  const [isEditProfilePopupOpen, editOpen] = React.useState(false) ;\n  const [isEditAvatarPopupOpen, avatarOpen] = React.useState(false) ;\n  const [isAddPlacePopupOpen, placeOpen] = React.useState(false) ;\n  const [cardSelected, selectedCard] = React.useState(false) ;\n\nfunction handleCardClick(){\n  selectedCard(true)\n}\n\nfunction handleEditEditClick () {\n\n  editOpen(true)\n}\nfunction handleEditAvatarClick(){\n  avatarOpen(true)\n}\nfunction handleEditAddClick () {\n  \nplaceOpen(true)\n}\nfunction closeAllPopups(){\n  placeOpen(false)\n  avatarOpen(false)\n  editOpen(false)\n}\n  return (\n  <>\n    <div className=\"page\">\n    <Header />\n    <Form   title = {'Добавить карточку'} name = {'add'} isOpen={isAddPlacePopupOpen ? 'popup_is-opened' : ''} onClose={closeAllPopups} button={'Добавить'} />\n    <Form   title = {'Обновить профиль'} name = {'avatar'} isOpen={isEditAvatarPopupOpen ? 'popup_is-opened' : ''} onClose={closeAllPopups} button={\"Сохранить\"}/>\n    <Form   title = {'Редактировать профиль'} name = {'edit'} isOpen={isEditProfilePopupOpen ? 'popup_is-opened' : ''} onClose={closeAllPopups} button={\"Сохранить\"}/>\n    <Form   title = {'Удалить карточку'} name = {'delete'} button={\"Да\"}/>\n    <Main userName={userName} onEditProfile ={handleEditEditClick} onAddPlace={handleEditAddClick} onEditAvatar={handleEditAvatarClick} userAvatar={userAvatar} userDescription={userDescription}/>\n    <Card cards={cards}/>\n    <Image/>\n    <Footer />\n    </div>\n    \n</>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}