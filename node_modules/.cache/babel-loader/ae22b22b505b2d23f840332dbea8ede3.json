{"ast":null,"code":"export class Api {\n  constructor({\n    baseUrl,\n    profileUrl,\n    headers,\n    likeUrl,\n    avatarUrl\n  }) {\n    this._baseUrl = baseUrl;\n    this._profileUrl = profileUrl;\n    this._headers = headers;\n    this._likeUrl = likeUrl;\n    this._avatarUrl = avatarUrl;\n  }\n\n  getInitialCards() {\n    return fetch(this._baseUrl, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._handleResOk);\n  }\n\n  addCards(data) {\n    return fetch(this._baseUrl, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.firstname,\n        link: data.secondname\n      })\n    }).then(this._handleResOk);\n  }\n\n  addUserId(data) {\n    return fetch(this._profileUrl, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.firstname,\n        about: data.secondname,\n        avatar: data.avatar\n      })\n    }).then(this._handleResOk);\n  }\n\n  getUserId() {\n    return fetch(this._profileUrl, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._handleResOk);\n  }\n\n  addAvatarId(data) {\n    return fetch(this._avatarUrl, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._handleResOk);\n  }\n\n  getAllNeededData() {\n    return Promise.all([this.getInitialCards(), this.getUserId()]);\n  }\n\n  deleteCard(_id) {\n    return fetch(this._baseUrl + '/' + _id, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._handleResOk);\n  }\n\n  likeCard(_id) {\n    return fetch(\"https://mesto.nomoreparties.co/v1/cohort-18/cards/likes\" + '/' + _id, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._handleResOk);\n  }\n\n  deleteLike(_id) {\n    return fetch(\"https://mesto.nomoreparties.co/v1/cohort-18/cards/likes\" + '/' + _id, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._handleResOk);\n  }\n\n  _handleResOk(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-18/cards\",\n  headers: {\n    \"authorization\": \"a40cc85c-64a0-4b1f-ad4a-926989d9eacf\",\n    \"Content-Type\": \"application/json\"\n  },\n  profileUrl: \"https://mesto.nomoreparties.co/v1/cohort-18/users/me\",\n  avatarUrl: 'https://mesto.nomoreparties.co/v1/cohort-18/users/me/avatar'\n});\nexport default api;","map":{"version":3,"sources":["/Users/admin/mesto-react/src/utils/api.js"],"names":["Api","constructor","baseUrl","profileUrl","headers","likeUrl","avatarUrl","_baseUrl","_profileUrl","_headers","_likeUrl","_avatarUrl","getInitialCards","fetch","method","then","_handleResOk","addCards","data","body","JSON","stringify","name","firstname","link","secondname","addUserId","about","avatar","getUserId","addAvatarId","getAllNeededData","Promise","all","deleteCard","_id","likeCard","deleteLike","res","ok","json","reject","status","api"],"mappings":"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","sourcesContent":["\n\nexport class Api {\n    constructor({baseUrl, profileUrl, headers, likeUrl, avatarUrl}) {\n        this._baseUrl = baseUrl;\n        this._profileUrl = profileUrl;\n        this._headers= headers;\n        this._likeUrl = likeUrl;\n        this._avatarUrl = avatarUrl\n    }\n    \n    getInitialCards() {\n        return fetch(this._baseUrl, {\n        method: \"GET\",\n        headers: this._headers\n        })\n    .then(this._handleResOk);\n    } \n\n    addCards(data){\n        return fetch(this._baseUrl, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name:data.firstname,\n                link:data.secondname,\n            })\n    })\n    .then(this._handleResOk);\n    }\n\n    addUserId(data) {\n        return fetch(this._profileUrl, {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n            name:data.firstname,\n            about:data.secondname,\n            avatar:data.avatar,\n        })\n    })\n    .then(this._handleResOk);\n    }\n\n    getUserId() {\n        return fetch(this._profileUrl, {\n            method: \"GET\",\n            headers: this._headers\n            })\n    .then(this._handleResOk);\n    }\n\n\n    \n    addAvatarId(data) {\n        return fetch(this._avatarUrl, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar:data.avatar,\n            })\n        })\n    .then(this._handleResOk);\n    }\n\n    getAllNeededData() {\n        return Promise.all([this.getInitialCards(),this.getUserId()])\n    }\n\n\n    deleteCard(_id) {\n        return fetch(this._baseUrl + '/' + _id, {\n            method: \"DELETE\",\n            headers: this._headers\n            })\n    .then(this._handleResOk);\n        \n    }\n\n    likeCard(_id){\n        return fetch(\"https://mesto.nomoreparties.co/v1/cohort-18/cards/likes\" + '/' +_id, {\n            method: \"PUT\",\n            headers: this._headers\n            })\n    .then(this._handleResOk);\n    }\n    deleteLike(_id){\n        return fetch(\"https://mesto.nomoreparties.co/v1/cohort-18/cards/likes\" + '/' +_id, {\n            method: \"DELETE\",\n            headers: this._headers\n            })\n    .then(this._handleResOk);\n    }\n\n\n    _handleResOk(res){\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        };\n}\n\nconst api = new Api({\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-18/cards\",\n    headers: {\n        \"authorization\": \"a40cc85c-64a0-4b1f-ad4a-926989d9eacf\",\n        \"Content-Type\": \"application/json\"\n    },\n    profileUrl: \"https://mesto.nomoreparties.co/v1/cohort-18/users/me\",\n    avatarUrl:'https://mesto.nomoreparties.co/v1/cohort-18/users/me/avatar',\n}); \n\nexport default api\n"]},"metadata":{},"sourceType":"module"}